# NIMSData
Data Handling Utilities

[![Build Status](https://travis-ci.org/scitran/nimsdata.svg?branch=ksh-nimsdata2)](https://travis-ci.org/scitran/nimsdata)

----

Provides class and functions for parsing, identifying and writing scientific datasets. Currently,
medical images (such as various flavors of MRI, dicoms, niftis, and some raw-files) are supported.

Also provides base classes that can be used to extend this package to cover additional data-domains.

Note that these utilites also have command-line interfaces, so you don't need a full NIMS
instance to use them. E.g., you can run our image reconstruction pipeline.

----

### installation on fresh ubuntu 14.04

- install dependencies, **had to chmod o+w /var/local to allow regular user to write; not ideal**

        sudo apt-get update
        sudo apt-get upgrade
        sudo apt-get install python-dev python-virtualenv git mercurial


- create and activate virtualenv

        virtualenv /var/local/nimsdata_env
        source /var/local/nimsdata_env/bin/bin/activate


- install dependencies, these are VERY specific version. once these versions are available
through pypi, these installation commands will change.  (subject to change)

        pip install numpy==1.9.0
        pip install git+https://github.com/scitran/pydicom.gitmirror.git@value_mismatch
        pip install git+https://github.com/nipy/nibabel.git
        pip install git+https://github.com/moloney/dcmstack
        pip install pymongo                                     # just want bson
        pip install PIL --allow-unverified PIL --allow-external PIL


- clone nimsdata from github

        git clone https://github.com/scitran/nimsdata.git /var/local/nimsdata
        cd /var/local/nimsdata
        git submodule init  # optional
        git submodule update  # optional


- install dependencies for submodules pfile, spirec and mux_recon_epi

        sudo apt-get install libatlas-base-dev gfortran octave libfftw3 libfftw3-dev
        source /var/local/nimsdata_env/bin/activate
        pip install scipy


## Misc Troubleshooting

- problem: octave throws the following error when processing a ge pfile?

        error: java.awt.HeadlessException

    solution: export DISPLAY env variable to trick Xorg server into behaving as "headless"

        export DISPLAY="0:0"


## Developer Notes:
development version is currently using the following:

|package        |version                |
|:------------- |:--------------------- |
|PIL            |1.1.7      (latest)    |
|dcmstack       |0.7.0dev   (latest)    |
|nibabel        |1.4.0dev   (latest)    |
|numpy          |1.9.0      (latest)    |
|pydicom        |0.9.9      (latest)    |

numpy 1.9 changes how numpy.unique() behaves when given an array of arrays.  Pre 1.9, np.unique
would return each unique array. Post 1.9, np.unique returns unique items from the arrays. dcmstack
is compatible with numpy 1.9, but numpy throws some FutureWarnings.  The current version of
dcmstack (0.7.0dev) may not be compatible with future version of numpy.

run the following git config commands to enable a git filter for the branch name.

    git config filter.brancher.smudge "./git_branch_filter.py smudge"
    git config filter.brancher.clean "./git_branch_filter.py clean"

Combined with .gitattributes, the smudge and clean filters will
replace 'branch=\_\_BRANCH\_\_' to indicate the current branch.
